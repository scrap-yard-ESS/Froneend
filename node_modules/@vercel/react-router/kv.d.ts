import { type SessionData, type SessionIdStorageStrategy } from 'react-router';
/**
 * KV client from the `@vercel/kv` package.
 */
interface KvClient {
    exists: (key: string) => Promise<number>;
    del: (key: string) => Promise<number>;
    get: <TData>(key: string) => Promise<TData | null>;
    set: (key: string, value: string, opts?: {
        pxat?: any;
        nx?: any;
    }) => Promise<string | null>;
}
export interface KvSessionStorageOptions {
    /**
     * KV client from the `@vercel/kv` package.
     */
    kv: KvClient;
    /**
     * The Cookie used to store the session id on the client, or options used
     * to automatically create one.
     */
    cookie: SessionIdStorageStrategy['cookie'];
    /**
     * Prefix of the Redis key name used for session data, followed by `:${id}`.
     * @default "session".
     */
    prefix?: string;
}
export declare function createKvSessionStorage<Data = SessionData, FlashData = Data>({ kv, cookie, prefix, }: KvSessionStorageOptions): import("react-router").SessionStorage<Data, FlashData>;
export {};
